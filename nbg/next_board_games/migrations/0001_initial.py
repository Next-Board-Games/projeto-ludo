# Generated by Django 5.0.3 on 2024-03-28 00:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id_categoria', models.IntegerField(primary_key=True, serialize=False)),
                ('nm_categoria', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Mecanica',
            fields=[
                ('id_mecanica', models.IntegerField(primary_key=True, serialize=False)),
                ('nm_mecanica', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ModelStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_data', models.BinaryField()),
            ],
        ),
        migrations.CreateModel(
            name='Profissional',
            fields=[
                ('id_profissional', models.IntegerField(primary_key=True, serialize=False)),
                ('nm_profissional', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('id_tema', models.IntegerField(primary_key=True, serialize=False)),
                ('nm_tema', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TrainedModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('model_data', models.BinaryField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Jogo',
            fields=[
                ('id_jogo', models.IntegerField(primary_key=True, serialize=False)),
                ('nm_jogo', models.CharField(max_length=255)),
                ('thumb', models.URLField(blank=True, null=True)),
                ('tp_jogo', models.CharField(blank=True, max_length=1, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('ano_publicacao', models.IntegerField(blank=True, null=True)),
                ('ano_nacional', models.IntegerField(blank=True, null=True)),
                ('qt_jogadores_min', models.IntegerField(blank=True, null=True)),
                ('qt_jogadores_max', models.IntegerField(blank=True, null=True)),
                ('vl_tempo_jogo', models.IntegerField(blank=True, null=True)),
                ('idade_minima', models.IntegerField(blank=True, null=True)),
                ('qt_tem', models.IntegerField(blank=True, null=True)),
                ('qt_teve', models.IntegerField(blank=True, null=True)),
                ('qt_favorito', models.IntegerField(blank=True, null=True)),
                ('qt_quer', models.IntegerField(blank=True, null=True)),
                ('qt_jogou', models.IntegerField(blank=True, null=True)),
                ('cluster', models.IntegerField(blank=True, null=True)),
                ('categorias', models.ManyToManyField(blank=True, to='next_board_games.categoria')),
                ('mecanicas', models.ManyToManyField(blank=True, to='next_board_games.mecanica')),
                ('artistas', models.ManyToManyField(blank=True, related_name='artistas', to='next_board_games.profissional')),
                ('designers', models.ManyToManyField(blank=True, related_name='designers', to='next_board_games.profissional')),
                ('temas', models.ManyToManyField(blank=True, to='next_board_games.tema')),
            ],
        ),
        migrations.CreateModel(
            name='ColecaoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_aquisicao', models.DateField()),
                ('teve', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('jogo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='next_board_games.jogo')),
            ],
        ),
        migrations.CreateModel(
            name='AvaliacaoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avaliacao', models.IntegerField()),
                ('comentario', models.TextField(blank=True, null=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('jogo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='next_board_games.jogo')),
            ],
        ),
        migrations.CreateModel(
            name='JogosJogados',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jogado_em', models.DateField()),
                ('jogo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='next_board_games.jogo')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JogosTidos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teve', models.BooleanField(default=True)),
                ('jogo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='next_board_games.jogo')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ListaDesejos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jogo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='next_board_games.jogo')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
